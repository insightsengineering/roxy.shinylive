% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tag_examplesShinylive.R
\name{tag-examplesShinylive}
\alias{tag-examplesShinylive}
\title{Custom \code{examplesShinylive} tag.}
\usage{
#' @examplesShinylive${1:# example code (optional)}
}
\description{
This function generates a new "Examples in Shinylive" section in the documentation. This section contains URL to
the application in Shinylive as well as an iframe with the application.
If no code is provided then the code is taken from the following \verb{@examples} or \verb{@examplesIf} tag.
}
\details{
The application code must be executable inside Shinylive. If the application code includes functions from your
package, you must add \verb{library(<your package>)} beforehand. For more information, refer to the Decoration section
on how to use and decorate existing examples.

Note: All the packages used in the application code need to be installable in WebR.
See \href{https://docs.r-wasm.org/webr/latest/packages.html}{this article} for more details.
}
\section{Decoration}{


To avoid repetition between the \verb{@examplesShinylive} and \verb{@examples} sections, there are special string literals
that provide access to the other tags from within the content of \verb{@examplesShinylive}.
These literals should be used as expressions embraced with \code{{{ }}}, which are then interpolated using
\code{glue::glue_data(..., .open = "{{", .close = "}}")}.

The following keywords are available:
\itemize{
\item \code{"{{ tags_examples }}"} - a list of \verb{@examples} or \verb{@examplesIf} tags
\item \code{"{{ examples }}"} - a list of "raw" elements from \code{tags_examples} list elements
\item \code{"{{ next_example }}"} - "raw" element of the next example
\item \code{"{{ prev_example }}"} - "raw" element of the previous example
}

This allows you to access and decorate existing example code to create executable application code for Shinylive.
Refer to the examples section for possible use cases.
}

\examples{
# As a part of documentation:

# basic example:
#' (docs)
#' @examplesShinylive
#' @examples
#' (example code)

# using keywords:
#' (docs)
#' @examplesShinylive
#' foo <- 1
#' {{ next_example }}
#' bar <- 2
#' @examples
#' (your example code)

# A typical example would be:
#' (docs)
#' @examplesShinylive
#' library(<your package>)
#' interactive <- function() TRUE
#' {{ next_example }}
#' @examples
#' app <- ...
#' if (interactive()) {
#'   shinyApp(app$ui, app$server)
#' }

# multiple apps:
#' (docs)
#' @examplesShinylive
#' @examples
#' (your example app 1)
#' @examplesShinylive
#' @examples
#' (your example app 2)

# skip parts of example code:
#' (docs)
#' @examples
#' (your example code - skipped)
#' @examplesShinylive
#' @examples
#' (your example code - included)

# multiple apps with keywords:
#' (docs)
#' @examplesShinylive
#' x <- 1
#' {{ next_example }}
#' @examples
#' (your example app 1)
#' @examplesShinylive
#' y <- 1
#' {{ next_example }}
#' @examples
#' (your example app 2)
}
